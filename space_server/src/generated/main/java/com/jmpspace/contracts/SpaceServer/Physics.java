// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: physics.proto

package com.jmpspace.contracts.SpaceServer;

public final class Physics {
  private Physics() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Vector2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:physics.Vector2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required double x = 1;</code>
     */
    double getX();

    /**
     * <code>required double y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required double y = 2;</code>
     */
    double getY();
  }
  /**
   * Protobuf type {@code physics.Vector2}
   */
  public static final class Vector2 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:physics.Vector2)
      Vector2OrBuilder {
    // Use Vector2.newBuilder() to construct.
    private Vector2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector2 defaultInstance;
    public static Vector2 getDefaultInstance() {
      return defaultInstance;
    }

    public Vector2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              x_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              y_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_Vector2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_Vector2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jmpspace.contracts.SpaceServer.Physics.Vector2.class, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder.class);
    }

    public static com.google.protobuf.Parser<Vector2> PARSER =
        new com.google.protobuf.AbstractParser<Vector2>() {
      public Vector2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>required double x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double x = 1;</code>
     */
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>required double y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double y = 2;</code>
     */
    public double getY() {
      return y_;
    }

    private void initFields() {
      x_ = 0D;
      y_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.Vector2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.jmpspace.contracts.SpaceServer.Physics.Vector2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code physics.Vector2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:physics.Vector2)
        com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_Vector2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_Vector2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jmpspace.contracts.SpaceServer.Physics.Vector2.class, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder.class);
      }

      // Construct using com.jmpspace.contracts.SpaceServer.Physics.Vector2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_Vector2_descriptor;
      }

      public com.jmpspace.contracts.SpaceServer.Physics.Vector2 getDefaultInstanceForType() {
        return com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
      }

      public com.jmpspace.contracts.SpaceServer.Physics.Vector2 build() {
        com.jmpspace.contracts.SpaceServer.Physics.Vector2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jmpspace.contracts.SpaceServer.Physics.Vector2 buildPartial() {
        com.jmpspace.contracts.SpaceServer.Physics.Vector2 result = new com.jmpspace.contracts.SpaceServer.Physics.Vector2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jmpspace.contracts.SpaceServer.Physics.Vector2) {
          return mergeFrom((com.jmpspace.contracts.SpaceServer.Physics.Vector2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jmpspace.contracts.SpaceServer.Physics.Vector2 other) {
        if (other == com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jmpspace.contracts.SpaceServer.Physics.Vector2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jmpspace.contracts.SpaceServer.Physics.Vector2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double x_ ;
      /**
       * <code>required double x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double x = 1;</code>
       */
      public double getX() {
        return x_;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder setX(double value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>required double y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double y = 2;</code>
       */
      public double getY() {
        return y_;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder setY(double value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:physics.Vector2)
    }

    static {
      defaultInstance = new Vector2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:physics.Vector2)
  }

  public interface PhysicsStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:physics.PhysicsState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    boolean hasPosition();
    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    com.jmpspace.contracts.SpaceServer.Physics.Vector2 getPosition();
    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getPositionOrBuilder();

    /**
     * <code>required double orientation = 2;</code>
     */
    boolean hasOrientation();
    /**
     * <code>required double orientation = 2;</code>
     */
    double getOrientation();

    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    boolean hasVelocity();
    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    com.jmpspace.contracts.SpaceServer.Physics.Vector2 getVelocity();
    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getVelocityOrBuilder();

    /**
     * <code>required double spin = 4;</code>
     */
    boolean hasSpin();
    /**
     * <code>required double spin = 4;</code>
     */
    double getSpin();
  }
  /**
   * Protobuf type {@code physics.PhysicsState}
   */
  public static final class PhysicsState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:physics.PhysicsState)
      PhysicsStateOrBuilder {
    // Use PhysicsState.newBuilder() to construct.
    private PhysicsState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PhysicsState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PhysicsState defaultInstance;
    public static PhysicsState getDefaultInstance() {
      return defaultInstance;
    }

    public PhysicsState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PhysicsState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(com.jmpspace.contracts.SpaceServer.Physics.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              orientation_ = input.readDouble();
              break;
            }
            case 26: {
              com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = velocity_.toBuilder();
              }
              velocity_ = input.readMessage(com.jmpspace.contracts.SpaceServer.Physics.Vector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(velocity_);
                velocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              spin_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_PhysicsState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_PhysicsState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.class, com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.Builder.class);
    }

    public static com.google.protobuf.Parser<PhysicsState> PARSER =
        new com.google.protobuf.AbstractParser<PhysicsState>() {
      public PhysicsState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PhysicsState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PhysicsState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int POSITION_FIELD_NUMBER = 1;
    private com.jmpspace.contracts.SpaceServer.Physics.Vector2 position_;
    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    public com.jmpspace.contracts.SpaceServer.Physics.Vector2 getPosition() {
      return position_;
    }
    /**
     * <code>required .physics.Vector2 position = 1;</code>
     */
    public com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getPositionOrBuilder() {
      return position_;
    }

    public static final int ORIENTATION_FIELD_NUMBER = 2;
    private double orientation_;
    /**
     * <code>required double orientation = 2;</code>
     */
    public boolean hasOrientation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double orientation = 2;</code>
     */
    public double getOrientation() {
      return orientation_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 3;
    private com.jmpspace.contracts.SpaceServer.Physics.Vector2 velocity_;
    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    public boolean hasVelocity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    public com.jmpspace.contracts.SpaceServer.Physics.Vector2 getVelocity() {
      return velocity_;
    }
    /**
     * <code>required .physics.Vector2 velocity = 3;</code>
     */
    public com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getVelocityOrBuilder() {
      return velocity_;
    }

    public static final int SPIN_FIELD_NUMBER = 4;
    private double spin_;
    /**
     * <code>required double spin = 4;</code>
     */
    public boolean hasSpin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double spin = 4;</code>
     */
    public double getSpin() {
      return spin_;
    }

    private void initFields() {
      position_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
      orientation_ = 0D;
      velocity_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
      spin_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrientation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVelocity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPosition().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getVelocity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, orientation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, velocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, spin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, orientation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, velocity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, spin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.jmpspace.contracts.SpaceServer.Physics.PhysicsState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code physics.PhysicsState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:physics.PhysicsState)
        com.jmpspace.contracts.SpaceServer.Physics.PhysicsStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_PhysicsState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_PhysicsState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.class, com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.Builder.class);
      }

      // Construct using com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getVelocityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        orientation_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (velocityBuilder_ == null) {
          velocity_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        spin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jmpspace.contracts.SpaceServer.Physics.internal_static_physics_PhysicsState_descriptor;
      }

      public com.jmpspace.contracts.SpaceServer.Physics.PhysicsState getDefaultInstanceForType() {
        return com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.getDefaultInstance();
      }

      public com.jmpspace.contracts.SpaceServer.Physics.PhysicsState build() {
        com.jmpspace.contracts.SpaceServer.Physics.PhysicsState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.jmpspace.contracts.SpaceServer.Physics.PhysicsState buildPartial() {
        com.jmpspace.contracts.SpaceServer.Physics.PhysicsState result = new com.jmpspace.contracts.SpaceServer.Physics.PhysicsState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orientation_ = orientation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (velocityBuilder_ == null) {
          result.velocity_ = velocity_;
        } else {
          result.velocity_ = velocityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.spin_ = spin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jmpspace.contracts.SpaceServer.Physics.PhysicsState) {
          return mergeFrom((com.jmpspace.contracts.SpaceServer.Physics.PhysicsState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jmpspace.contracts.SpaceServer.Physics.PhysicsState other) {
        if (other == com.jmpspace.contracts.SpaceServer.Physics.PhysicsState.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasOrientation()) {
          setOrientation(other.getOrientation());
        }
        if (other.hasVelocity()) {
          mergeVelocity(other.getVelocity());
        }
        if (other.hasSpin()) {
          setSpin(other.getSpin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasOrientation()) {
          
          return false;
        }
        if (!hasVelocity()) {
          
          return false;
        }
        if (!hasSpin()) {
          
          return false;
        }
        if (!getPosition().isInitialized()) {
          
          return false;
        }
        if (!getVelocity().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.jmpspace.contracts.SpaceServer.Physics.PhysicsState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.jmpspace.contracts.SpaceServer.Physics.PhysicsState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.jmpspace.contracts.SpaceServer.Physics.Vector2 position_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public Builder setPosition(com.jmpspace.contracts.SpaceServer.Physics.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public Builder setPosition(
          com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public Builder mergePosition(com.jmpspace.contracts.SpaceServer.Physics.Vector2 value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              position_ != com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance()) {
            position_ =
              com.jmpspace.contracts.SpaceServer.Physics.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder getPositionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      /**
       * <code>required .physics.Vector2 position = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private double orientation_ ;
      /**
       * <code>required double orientation = 2;</code>
       */
      public boolean hasOrientation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double orientation = 2;</code>
       */
      public double getOrientation() {
        return orientation_;
      }
      /**
       * <code>required double orientation = 2;</code>
       */
      public Builder setOrientation(double value) {
        bitField0_ |= 0x00000002;
        orientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double orientation = 2;</code>
       */
      public Builder clearOrientation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orientation_ = 0D;
        onChanged();
        return this;
      }

      private com.jmpspace.contracts.SpaceServer.Physics.Vector2 velocity_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder> velocityBuilder_;
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2 getVelocity() {
        if (velocityBuilder_ == null) {
          return velocity_;
        } else {
          return velocityBuilder_.getMessage();
        }
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public Builder setVelocity(com.jmpspace.contracts.SpaceServer.Physics.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          velocity_ = value;
          onChanged();
        } else {
          velocityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public Builder setVelocity(
          com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder builderForValue) {
        if (velocityBuilder_ == null) {
          velocity_ = builderForValue.build();
          onChanged();
        } else {
          velocityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public Builder mergeVelocity(com.jmpspace.contracts.SpaceServer.Physics.Vector2 value) {
        if (velocityBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              velocity_ != com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance()) {
            velocity_ =
              com.jmpspace.contracts.SpaceServer.Physics.Vector2.newBuilder(velocity_).mergeFrom(value).buildPartial();
          } else {
            velocity_ = value;
          }
          onChanged();
        } else {
          velocityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public Builder clearVelocity() {
        if (velocityBuilder_ == null) {
          velocity_ = com.jmpspace.contracts.SpaceServer.Physics.Vector2.getDefaultInstance();
          onChanged();
        } else {
          velocityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder getVelocityBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVelocityFieldBuilder().getBuilder();
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      public com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder getVelocityOrBuilder() {
        if (velocityBuilder_ != null) {
          return velocityBuilder_.getMessageOrBuilder();
        } else {
          return velocity_;
        }
      }
      /**
       * <code>required .physics.Vector2 velocity = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder> 
          getVelocityFieldBuilder() {
        if (velocityBuilder_ == null) {
          velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.jmpspace.contracts.SpaceServer.Physics.Vector2, com.jmpspace.contracts.SpaceServer.Physics.Vector2.Builder, com.jmpspace.contracts.SpaceServer.Physics.Vector2OrBuilder>(
                  getVelocity(),
                  getParentForChildren(),
                  isClean());
          velocity_ = null;
        }
        return velocityBuilder_;
      }

      private double spin_ ;
      /**
       * <code>required double spin = 4;</code>
       */
      public boolean hasSpin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double spin = 4;</code>
       */
      public double getSpin() {
        return spin_;
      }
      /**
       * <code>required double spin = 4;</code>
       */
      public Builder setSpin(double value) {
        bitField0_ |= 0x00000008;
        spin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double spin = 4;</code>
       */
      public Builder clearSpin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        spin_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:physics.PhysicsState)
    }

    static {
      defaultInstance = new PhysicsState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:physics.PhysicsState)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_physics_Vector2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_physics_Vector2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_physics_PhysicsState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_physics_PhysicsState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rphysics.proto\022\007physics\"\037\n\007Vector2\022\t\n\001x" +
      "\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"y\n\014PhysicsState\022\"\n\010pos" +
      "ition\030\001 \002(\0132\020.physics.Vector2\022\023\n\013orienta" +
      "tion\030\002 \002(\001\022\"\n\010velocity\030\003 \002(\0132\020.physics.V" +
      "ector2\022\014\n\004spin\030\004 \002(\001B$\n\"com.jmpspace.con" +
      "tracts.SpaceServer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_physics_Vector2_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_physics_Vector2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_physics_Vector2_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_physics_PhysicsState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_physics_PhysicsState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_physics_PhysicsState_descriptor,
        new java.lang.String[] { "Position", "Orientation", "Velocity", "Spin", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
